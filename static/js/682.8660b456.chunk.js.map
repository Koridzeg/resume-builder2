{"version":3,"file":"static/js/682.8660b456.chunk.js","mappings":"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","sources":["components/WizardFormField.tsx","components/Resume.tsx","pages/FirstStep.tsx","pages/SecondStep.tsx","useSubmit.tsx","pages/ThirdStep.tsx","pages/WizardForm.tsx"],"sourcesContent":["import { Box, TextField, Typography } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport errorImage from '../images/error.png'\r\nimport successImage from '../images/success.png'\r\n\r\ntype TextFieldProps = {\r\n    label: string,\r\n    hint: string,\r\n    placeholder: string,\r\n    value: string,\r\n    validate: (value: string) => boolean,\r\n    onError: (error: boolean) => void,\r\n    onChange: (value: string) => void,\r\n}\r\n\r\nconst WizardFormField = ({ label, hint, placeholder, validate, onError, value, onChange }: TextFieldProps) => {\r\n    const [fieldValue, setFieldValue] = useState(value)\r\n    const [error, setError] = useState<undefined | boolean>(undefined)\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = e.target.value\r\n        setFieldValue(newValue)\r\n        if (newValue.length < 0) {\r\n            setError(undefined)\r\n        } else {\r\n            setError(!validate(newValue))\r\n            onError(!validate(newValue))\r\n        }\r\n        onChange(newValue)\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            display='flex'\r\n            flexDirection='column'\r\n            gap='0.3rem'\r\n            width=\"100%\"\r\n\r\n        >\r\n            <Typography fontSize='18px' sx={{ color: error ? '#E52F2F' : '#000000' }} fontWeight='700'>{label}</Typography>\r\n            <Box display='flex' flexDirection='row' width='100%'>\r\n                <TextField\r\n                    placeholder={placeholder}\r\n                    sx={{\r\n                        bgcolor: 'white',\r\n                        border: error === undefined ? '1px solid #000000' : error ? '1px solid #EF5050' : '1px solid #98E37E',\r\n                        borderRadius: '5px',\r\n                        width: '100%',\r\n                        \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                            \"& > fieldset\": {\r\n                                borderColor: \"black\",\r\n                            }\r\n                        },\r\n\r\n                    }}\r\n                    type='text'\r\n                    value={value}\r\n                    onChange={handleChange} />\r\n                {error === undefined ? null : (\r\n                    error ? (\r\n                        <img src={errorImage} alt=\"error\" style={{ width: '20px', height: '20px', position: 'relative', left: '10px', top: '17px' }} />\r\n                    ) : (\r\n                        <img src={successImage} alt=\"different icon\" style={{ width: '20px', height: '20px', position: 'relative', right: '35px', top: '17px' }} />\r\n                    )\r\n                )}\r\n            </Box>\r\n            <Typography fontSize='14px' color='#2E2E2E' fontWeight='100'>{hint}</Typography>\r\n        </Box>\r\n    )\r\n}\r\nexport default WizardFormField","import { Box, Typography } from '@mui/material'\r\nimport mail from '../images/mail.png'\r\nimport phone from '../images/phone.png'\r\nimport smallLine from '../images/smallline.png'\r\nimport { WizardFormData } from '../types'\r\nimport test from \"../images/test.png\"\r\nimport React from 'react'\r\nimport rlogo from \"../images/rlogo.png\"\r\n\r\ntype ResumeProps = {\r\n    formData: WizardFormData\r\n}\r\n\r\nconst Resume: React.FC<ResumeProps> = ({ formData }) => {\r\n\r\n\r\n    return (\r\n        <Box display='flex' height='100%' gap='1.5rem' flexDirection='column' paddingLeft='6em' paddingTop='3.5em' sx={{ whiteSpace:'pre-wrap' }} >\r\n            {formData.image && (\r\n                <img src={formData.image} alt=\"\" style={{ width: '246px', height: '246px', position: 'absolute', left: '82%', borderRadius: '133px' }} />\r\n            )}\r\n            <Box display='flex' gap='1.5em' maxWidth='80%' flexDirection='row'>\r\n                <Typography color='#F93B1D' fontWeight='bold' fontSize='36px' maxWidth='40%' style={{ wordWrap: \"break-word\" }}>{formData.name}</Typography>\r\n                <Typography color='#F93B1D' fontWeight='700' fontSize='36px' maxWidth='40%'  style={{ wordWrap: \"break-word\" }}>{formData.surname}</Typography>\r\n            </Box>\r\n            <Box display='flex' paddingLeft='0.5em' flexDirection='column' gap='1rem'>\r\n                <Box display='flex' gap='1rem' flexDirection='row' alignItems='center' maxWidth='65%'>\r\n                    <img style={{ width: '20px', height: '20px' }} src={mail} alt=\"\" />\r\n                    <Typography fontSize='20px' maxWidth='65%' style={{ wordWrap: \"break-word\" }}>{formData.email}</Typography>\r\n                </Box>\r\n                <Box display='flex' gap='1rem' flexDirection='row' alignItems='center'>\r\n                    <img style={{ width: '20px', height: '20px' }} src={phone} alt=\"\" />\r\n                    <Typography fontSize='20px' maxWidth='45%' style={{ wordWrap: \"break-word\" }}>{formData.phone_number}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Typography color='#F93B1D' fontWeight='700' fontSize='28px'>ჩემ შესახებ</Typography>\r\n            <Box display='flex' flexDirection='column' maxWidth='70%'>\r\n                <Typography fontSize='19px' fontWeight='400' maxWidth='100%' style={{ wordWrap: \"break-word\" }}>{formData.about_me}</Typography>\r\n            </Box>\r\n            <img src={smallLine} alt=\"\" style={{ maxWidth: '90%' }} />\r\n            <Typography fontWeight='700' fontSize='28px' color='#F93B1D'>გამოცდილება</Typography>\r\n            {formData.experiences.map((experience, index) => (\r\n                <React.Fragment key={index}>\r\n                    <Box display='flex' flexDirection='row' gap='1em' maxWidth='45%'>\r\n                        <Typography fontWeight='700' color='#1A1A1A' maxWidth='65%' style={{ wordWrap: \"break-word\" }} >{experience.position}</Typography>\r\n                        <Typography fontWeight='700' color='#1A1A1A' maxWidth='65%' style={{ wordWrap: \"break-word\" }} >{experience.employer}</Typography>\r\n                    </Box>\r\n                    <Box display='flex' flexDirection='row' gap='1em' maxWidth='45%'>\r\n                        <Typography fontSize='16px' color='#909090' style={{ wordWrap: \"break-word\" }}>\r\n                            {experience.start_date ? new Date(experience.start_date).toISOString().substring(0, 10) : \"\"}\r\n                            &nbsp;\r\n                            -\r\n                            &nbsp;\r\n                            {experience.due_date ? new Date(experience.due_date).toISOString().substring(0, 10) : \"\"}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display='flex' width='500px' flexDirection='column'>\r\n                        <Typography width='100%' style={{ wordWrap: \"break-word\" }}>{experience.description}</Typography>\r\n                    </Box>\r\n                </React.Fragment>\r\n            ))}\r\n            <img src={smallLine} alt=\"\" style={{ width: '90%' }} />\r\n            <Typography fontWeight='700' fontSize='28px' color='#F93B1D'>განათლება</Typography>\r\n            {formData.educations.map((edu, idx) => (\r\n                <React.Fragment key={idx}>\r\n                    <Box display='flex' maxWidth='45%'>\r\n                    <Typography fontWeight='700' color='#1A1A1A' style={{ wordWrap: \"break-word\" }} >{edu.institute}</Typography>\r\n                    </Box>\r\n                    <Box display='flex' maxWidth='45%'>\r\n                        {edu.due_date ? new Date(edu.due_date).toISOString().substring(0,10) : ''} \r\n                    </Box>\r\n                    <Box display='flex' maxWidth='500px'>\r\n                    <Typography fontSize='16px' fontWeight='400' width='100%' style={{ wordWrap: \"break-word\" }}>{edu.description}</Typography>\r\n                    </Box>\r\n                </React.Fragment>\r\n            ))}\r\n            <img src={rlogo} alt=\"sadasdasdasdsadasdd\" style={{position:'absolute',width:'40px',height:'40px',bottom:'5%',right:'39%'}} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Resume","import { Box, IconButton, TextField, Typography } from '@mui/material'\r\nimport Button from \"@mui/material/Button\"\r\nimport WizardFormField from \"../components/WizardFormField\"\r\nimport { useEffect, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport back from \"../images/back.png\"\r\nimport line from \"../images/line.png\"\r\nimport Resume from '../components/Resume'\r\nimport { WizardFormData } from '../types'\r\n\r\n\r\ninterface FirstStepProps {\r\n    handleNextStep: () => void;\r\n    formData: WizardFormData;\r\n    updateFormData: (updateData: Partial<WizardFormData>) => void\r\n}\r\n\r\n\r\nconst FirstStep: React.FC<FirstStepProps> = ({ handleNextStep, formData, updateFormData }) => {\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [, setErrors] = useState({\r\n        nameError: false,\r\n        surnameError: false,\r\n        emailError: false,\r\n        imageError: false,\r\n        aboutMeError: false,\r\n        numberError: false,\r\n    })\r\n    // const storedFormData = localStorage.getItem('formData');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleError = (field: string, error: boolean) => {\r\n        setErrors(prevErrors => ({ ...prevErrors, [field]: error }))\r\n    }\r\n\r\n\r\n    const handleImageUpload = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.click();\r\n\r\n        input.onchange = (event: Event) => {\r\n            if (event.target) {\r\n                const target = event.target as HTMLInputElement;\r\n                if (target.files) {\r\n                    const reader = new FileReader();\r\n                    reader.readAsDataURL(target.files[0]);\r\n                    reader.onload = (e) => {\r\n                        updateFormData({ image: e.target?.result as string });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    };\r\n\r\n    const handleNameValidation = (value: string): boolean => {\r\n        const onlyGeorgian = /^[ა-ჰ]+$/g;\r\n        return value.length >= 2 && new RegExp(onlyGeorgian).test(value);\r\n\r\n    }\r\n\r\n    const handleEmailValidation = (value: string): boolean => {\r\n        const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        return value.endsWith('@redberry.ge') && new RegExp(mailformat).test(value)\r\n    }\r\n\r\n    const handlePhoneValidation = (value: string): boolean => {\r\n        const formatPhoneNumber = (number: any) =>\r\n            Number(number?.replaceAll(\"+\", \"\").replaceAll(\" \", \"\"));\r\n        const formatedNumber = formatPhoneNumber(value)\r\n\r\n\r\n        return value.startsWith('+995') && String(formatedNumber).length === 12\r\n    }\r\n\r\n    const handleAboutMeChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        updateFormData({ about_me: event.target.value });\r\n    };\r\n\r\n    const handleFieldChange = (field: string, value: string) => {\r\n        updateFormData({ [field]: value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const nameValid = handleNameValidation(formData.name);\r\n        const emailValid = handleEmailValidation(formData.email);\r\n        const phoneValid = handlePhoneValidation(formData.phone_number);\r\n        const surnameValid = handleNameValidation(formData.surname);\r\n        const imageValid = formData.image.length > 0;\r\n\r\n        setFormValid(nameValid && emailValid && phoneValid && surnameValid && imageValid);\r\n    }, [formData]);\r\n\r\n    const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (formValid) {\r\n            handleNextStep();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='row' flex='1'>\r\n            <Box display='flex' minHeight='100vh' paddingLeft='1.5em' gap=\"1.5em\" bgcolor='#F9F9F9' height=\"100%\" maxWidth=\"55%\" flexDirection='column'>\r\n                <Box display='flex' gap=\"3em\" flexDirection='row' padding='2em'>\r\n                    <IconButton style={{ height: '40px', width: '40px', }} onClick={() => {\r\n                        localStorage.removeItem('formData')\r\n                        navigate('/')\r\n                    }}>\r\n                        <img src={back} alt='circle' />\r\n                    </IconButton>\r\n                    <Box display='flex' flexDirection='column'>\r\n                        <Box display='flex' justifyContent='space-between' width='90%'>\r\n                            <Typography sx={{ fontWeight: '700', fontSize: '26px' }}>პირადი ინფო</Typography>\r\n                            <Typography sx={{ position: 'relative', top: '50%', fontSize: '18px' }}>1/3</Typography>\r\n                        </Box>\r\n                        <img src={line} alt=\"line\" style={{ width: '90%', paddingTop: '1em' }} />\r\n                    </Box>\r\n                </Box>\r\n                <Box display='flex' paddingLeft='7.5em' gap=\"4em\">\r\n                    <Box width=\"40%\">\r\n                        <WizardFormField value={formData.name} onChange={(value) => handleFieldChange('name', value)} onError={(error) => handleError('nameError', error)} placeholder='ანზორ' label=\"სახელი\" hint=\"მინიმუმ 2 ასო,ქართული ასოები\" validate={handleNameValidation} />\r\n                    </Box>\r\n                    <Box width=\"40%\">\r\n                        <WizardFormField value={formData.surname} onChange={(value) => handleFieldChange('surname', value)} onError={(error) => handleError('surnameError', error)} placeholder='მუმლაძე' label=\"გვარი\" hint=\"მინიმუმ 2 ასო,ქართული ასოები\" validate={handleNameValidation} />\r\n                    </Box>\r\n                </Box>\r\n                <Box display='flex' gap=\"1.5em\" paddingTop='1em' paddingLeft='7.5em'>\r\n                    <Typography fontWeight='700' fontSize='20px'>პირადი ფოტოს ატვირთვა</Typography>\r\n                    <Button variant=\"contained\" onClick={handleImageUpload} color='secondary' sx={{ width: '107px', fontSize: '16px', fontWeight: '400', bgcolor: '#0E80BF' }}>ატვირთვა</Button>\r\n                </Box>\r\n                <Box display='flex' flexDirection='column' gap='0.4em' paddingTop='1.2em' paddingLeft='7.5em'>\r\n                    <Typography fontWeight='700' fontSize='20px'>ჩემ შესახებ (არასავალდებულო)</Typography>\r\n                    <Box>\r\n                        <TextField\r\n                            value={formData.about_me}\r\n                            onChange={handleAboutMeChange}\r\n                            multiline placeholder=\"ზოგადი ინფო შენ შესახებ\"\r\n                            rows={4}\r\n                            sx={{\r\n                                bgcolor: 'white', width: \"87%\", border: formData.about_me.length === 0 ? '1px solid black' : '1px solid #98E373', \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                    \"& > fieldset\": {\r\n                                        borderColor: \"black\",\r\n                                    }\r\n                                },\r\n                            }} />\r\n                    </Box>\r\n                </Box>\r\n                <Box display='flex' width='89%' paddingTop='1em' paddingLeft='7.5em'>\r\n                    <WizardFormField value={formData.email} onChange={(value) => handleFieldChange('email', value)} onError={(error) => handleError('emailError', error)} placeholder='anzorr666@redberry.ge' label='ელ.ფოსტა' hint='უნდა მთავრდებოდეს @redberry.ge-ით' validate={handleEmailValidation} />\r\n                </Box>\r\n                <Box display='flex' width='89%' paddingTop='1em' paddingLeft='7.5em'>\r\n                    <WizardFormField value={formData.phone_number} onChange={(value) => handleFieldChange('phone_number', value)} onError={(error) => handleError('numberError', error)} placeholder='+995 551 12 34 56' label='მობილურის ნომერი' hint='უნდა აკმაყოფილებდეს ქართული მობილურის ნომრის ფორმატს' validate={handlePhoneValidation} />\r\n                </Box>\r\n                <Box display='flex' justifyContent='flex-end' width='89%' paddingTop='4em'>\r\n                    <Button\r\n                        sx={{ bgcolor: '#6B40E3', width: '151px', height: '48px', borderRadius: '4px', color: 'white', fontSize: '18px' }}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        შემდეგი\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n            <Resume formData={formData}></Resume>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default FirstStep","import { Box, IconButton, Typography } from '@mui/material'\r\nimport Button from '@mui/material/Button'\r\nimport React, { useState, useEffect } from 'react'\r\nimport back from \"../images/back.png\"\r\nimport line from \"../images/line.png\"\r\nimport WizardFormField from '../components/WizardFormField'\r\nimport Resume from '../components/Resume'\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker'\r\nimport smallLine from '../images/smallline.png'\r\nimport { WizardFormData } from '../types'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\n\r\ntype SecondStepProps = {\r\n    handleNextStep: () => void,\r\n    handleBackStep: () => void,\r\n    formData: WizardFormData\r\n    updateFormData: (updateData: Partial<WizardFormData>) => void\r\n}\r\n\r\n\r\nconst SecondStep: React.FC<SecondStepProps> = ({ handleNextStep, handleBackStep, formData, updateFormData }) => {\r\n    const [formCount, setFormCount] = useState(1)\r\n    const [formValid, setFormValid] = useState(false)\r\n    const [errors, setErrors] = useState({\r\n        positionError: false,\r\n        employerError: false,\r\n        startingDateError: false,\r\n        endingDateError: false,\r\n        descriptionError: false,\r\n    })\r\n\r\n\r\n    const handlePositionValidation = (value: string): boolean => {\r\n        return value.length >= 2\r\n    }\r\n\r\n    const handleAddForm = () => {\r\n        setFormCount(formCount + 1);\r\n        updateFormData({\r\n            experiences: [\r\n                ...formData.experiences,\r\n                {\r\n                    position: '',\r\n                    employer: '',\r\n                    start_date: '',\r\n                    due_date: '',\r\n                    description: '',\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const handleEmployerValidation = (value: string): boolean => {\r\n        return value.length >= 2\r\n    }\r\n\r\n\r\n    const handleError = (field: string, error: boolean) => {\r\n        setErrors(prevErrors => ({ ...prevErrors, [field]: error }))\r\n    }\r\n\r\n    const handleFieldChange = (index: number, field: 'position' | 'employer' | 'startingDate' | 'endingDate' | 'description', value: string) => {\r\n        const updatedExperiences = formData.experiences.map((experience, i) => {\r\n            if (i === index) {\r\n                return { ...experience, [field]: value };\r\n            }\r\n            return experience;\r\n        });\r\n        updateFormData({ experiences: updatedExperiences });\r\n    };\r\n\r\n    const handleStartingDateChange = (index: number, newValue: string | null) => {\r\n        const updatedExperiences = formData.experiences.map((experience, i) => {\r\n            if (i === index) {\r\n                return { ...experience, start_date: newValue || '' };\r\n            }\r\n            return experience;\r\n        });\r\n        updateFormData({ experiences: updatedExperiences });\r\n    };\r\n\r\n    const handleEndingDateChange = (index: number, newValue: string | null) => {\r\n        const updatedExperiences = formData.experiences.map((experience, i) => {\r\n            if (i === index) {\r\n                return { ...experience, due_date: newValue || '' };\r\n            }\r\n            return experience;\r\n        });\r\n        updateFormData({ experiences: updatedExperiences });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const experiencesValid = formData.experiences.every(experience => {\r\n            const { position, employer, start_date, due_date, description } = experience;\r\n            return (\r\n                position.length >= 2 &&\r\n                employer.length >= 2 &&\r\n                Object.keys(start_date).length > 0 &&\r\n                Object.keys(due_date).length > 0 &&\r\n                description.length > 0\r\n            );\r\n        });\r\n        \r\n\r\n        setFormValid(experiencesValid);\r\n    }, [formData]);\r\n\r\n    const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (formValid) {\r\n            handleNextStep();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='row'>\r\n            <Box display='flex' paddingLeft='1.5em' gap=\"1em\" bgcolor='#F9F9F9' width=\"1080px\" flexDirection='column' minHeight='100vh'>\r\n                <Box display='flex' gap=\"3em\" flexDirection='row' padding='2em'>\r\n                    <IconButton style={{ height: '40px', width: '40px', }} onClick={() => {\r\n                        localStorage.removeItem('formData')\r\n                        window.location.reload()\r\n                    }}>\r\n                        <img src={back} alt='circle' />\r\n                    </IconButton>\r\n                    <Box display='flex' flexDirection='column'>\r\n                    <Box display='flex' justifyContent='space-between' width='90%'>\r\n                            <Typography sx={{ fontWeight: '700', fontSize: '26px' }}>გამოცდილება</Typography>\r\n                            <Typography sx={{ position: 'relative', top: '50%', fontSize: '18px' }}>2/3</Typography>\r\n                        </Box>\r\n                        <img src={line} alt=\"line\" style={{ width: '90%', paddingTop: '1em' }} />\r\n                    </Box>\r\n                </Box>\r\n                {Array.from({ length: formCount }, (_, index) => (\r\n                    <React.Fragment key={index} >\r\n                        <Box display='flex' width='89%' paddingTop='1em' paddingLeft='7.5em'>\r\n                            <WizardFormField value={formData.experiences[index].position} onError={(value) => handleError('positionError', value)} onChange={(value) => handleFieldChange(index, 'position', value)} placeholder='დეველოპერი, დიზაინერი, ა.შ.' label='თანამდებობა' hint='მინიმუმ 2 სიმბოლო' validate={handlePositionValidation} />\r\n                        </Box>\r\n                        <Box display='flex' width='89%' paddingTop='1em' paddingLeft='7.5em'>\r\n                            <WizardFormField value={formData.experiences[index].employer} onError={(value) => handleError('employerError', value)} onChange={(value) => handleFieldChange(index, 'employer', value)} placeholder='დამსაქმებელი' label='დამსაქმებელი' hint='მინიმუმ 2 სიმბოლო' validate={handleEmployerValidation} />\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='row' gap='4em' paddingTop='1.5em' paddingLeft='7.5em'>\r\n                            <Box display='flex' flexDirection='column' width='40%' gap='1em'>\r\n                                <Typography sx={{ fontSize: '18px', fontWeight: '700' }}>დაწყების რიცხვი</Typography>\r\n                                <DesktopDatePicker value={formData.experiences[index].start_date} onChange={(newValue) => {\r\n                                    handleStartingDateChange(index, newValue)\r\n                                }}\r\n                                    renderInput={(params) => <TextField onFocus={e => e.target.blur()} sx={{\r\n                                        bgcolor: 'white', \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                            \"& > fieldset\": {\r\n                                                borderColor: formData.experiences[index].start_date.length < 0 ? '#000000' : '#98E373'\r\n                                            }\r\n                                        },\r\n\r\n                                    }} {...params} />}\r\n                                ></DesktopDatePicker>\r\n                            </Box>\r\n                            <Box display='flex' flexDirection='column' width='40%' gap='1em'>\r\n                                <Typography sx={{ fontSize: '18px', fontWeight: '700' }}>დამთავრების რიცხვი</Typography>\r\n                                <DesktopDatePicker value={formData.experiences[index].due_date} onChange={(newValue) => {\r\n                                    handleEndingDateChange(index, newValue)\r\n                                }}\r\n                                    renderInput={(params) => <TextField onFocus={e => e.target.blur()} sx={{\r\n                                        bgcolor: 'white', \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                            \"& > fieldset\": {\r\n                                                borderColor: formData.experiences[index].due_date.length < 0 ? '#000000' : '#98E373'\r\n                                            }\r\n                                        },\r\n                                        '& .MuiOutlinedInput-root': {\r\n                                            '&:hover fieldset': {\r\n                                              cursor: 'default'\r\n                                            },\r\n                                          },\r\n\r\n                                          \r\n                                    }} {...params} />}\r\n                                ></DesktopDatePicker>\r\n                            </Box>\r\n\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='column' gap='0.4em' paddingTop='1.2em' paddingLeft='7.5em'>\r\n                            <Typography fontWeight='700' fontSize='20px'>აღწერა</Typography>\r\n                            <Box>\r\n                                <TextField value={formData.experiences[index].description} onChange={(e) => handleFieldChange(index, 'description', e.target.value)} multiline placeholder=\"როლი თანამდებობაზე და ზოგადი აღწერა\" rows={4} sx={{\r\n                                    bgcolor: 'white', width: \"87%\", \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                        \"& > fieldset\": {\r\n                                            borderColor: \"black\",\r\n                                        }\r\n                                    },\r\n                                    border: formData.experiences[index].description.length === 0 ? '1px solid black' : '1px solid #98E373'\r\n                                }} />\r\n                            </Box>\r\n                        </Box>\r\n                    </React.Fragment>\r\n                ))}\r\n                <Box display='flex' flexDirection='column' gap='3em' paddingTop='1.2em' paddingLeft='7.5em'>\r\n                    <img src={smallLine} alt=\"\" style={{ width: '87%' }} />\r\n                    <Button onClick={handleAddForm} sx={{ width: '289px', bgcolor: '#62A1EB', color: 'white', height: '50px', borderRadius: '5px', fontSize: '16px' }}>მეტი გამოცდილების დამატება</Button>\r\n                </Box>\r\n                <Box display='flex' paddingLeft='7.5em' width='88%' flexDirection='row' justifyContent='space-between' paddingTop='4em'>\r\n                    <Button onClick={() => {\r\n                        handleBackStep();\r\n                    }} sx={{ bgcolor: '#6B40E3', width: '113px', height: '48px', borderRadius: '4px', color: 'white', fontSize: '18px', fontWeight: '500' }}>უკან</Button>\r\n                    <Button onClick={handleSubmit} sx={{ bgcolor: '#6B40E3', width: '151px', height: '48px', borderRadius: '4px', color: 'white', fontSize: '18px', fontWeight: '500' }}>შემდეგი</Button>\r\n                </Box>\r\n            </Box>\r\n            <Resume formData={formData}></Resume>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SecondStep","import axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Education, Experience, WizardFormData } from \"./types\";\r\n\r\n\r\ntype ModifiedData = {\r\n    name: string,\r\n    surname: string,\r\n    image: File,\r\n    about_me: string,\r\n    email: string,\r\n    phone_number: string,\r\n    experiences: Experience[],\r\n    educations:Education[];\r\n  };\r\n\r\n  const useSubmit = (formData: WizardFormData) => {\r\n    function removeEmptyObjects<T extends object>(array: T[]): T[] {\r\n        return array.filter((obj:T) => {\r\n          return Object.values(obj).some((val) => val);\r\n        });\r\n    }\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const postData = async () => {\r\n        try {\r\n            const res = await axios({\r\n                method: \"get\",\r\n                url: formData.image,\r\n                responseType: \"blob\",\r\n            });\r\n\r\n            const file = new File([res.data], \"image\", { type: \"image/png\" });\r\n            const formatedNumber = formData.phone_number.replace(/\\s/g, '');\r\n            const modifiedData:ModifiedData = {\r\n                ...formData,\r\n                image: file,\r\n                experiences: removeEmptyObjects(formData.experiences),\r\n                educations: removeEmptyObjects(formData.educations),\r\n                phone_number: formatedNumber,\r\n            };\r\n\r\n            // Format the dates as \"2017/06/25\"\r\n            modifiedData.experiences.forEach((experience) => {\r\n                experience.start_date = new Date(experience.start_date).toISOString().split('T')[0];\r\n                experience.due_date = new Date(experience.due_date).toISOString().split('T')[0];\r\n              });\r\n              modifiedData.educations.forEach((education) => {\r\n                education.due_date = new Date(education.due_date).toISOString().split('T')[0];\r\n              });\r\n\r\n\r\n            const response = await axios.post(\r\n                \"https://resume.redberryinternship.ge/api/cvs\",\r\n                modifiedData,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\",\r\n                    },\r\n                }\r\n            );\r\n\r\n           \r\n            navigate(\"/finishedresume\", {\r\n                state: response.data,\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return postData;\r\n};\r\n\r\nexport default useSubmit;","import { Box, Button, FormControl, IconButton, InputLabel, MenuItem, Select, TextField, Typography } from \"@mui/material\";\r\nimport line from '../images/line.png'\r\nimport back from '../images/back.png'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport WizardFormField from \"../components/WizardFormField\";\r\nimport Resume from \"../components/Resume\";\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker'\r\nimport smallLine from '../images/smallline.png'\r\nimport { WizardFormData } from \"../types\";\r\nimport useSubmit from \"../useSubmit\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Degree {\r\n    id: number,\r\n    title: string,\r\n}\r\n\r\ntype ThirdStepProps = {\r\n    handleNextStep: () => void,\r\n    handleBackStep: () => void,\r\n    formData: WizardFormData\r\n    updateFormData: (updateData: Partial<WizardFormData>) => void\r\n}\r\n\r\nconst ThirdStep: React.FC<ThirdStepProps> = ({ handleBackStep, handleNextStep, formData, updateFormData }) => {\r\n    const [formCount, setFormCount] = useState(1)\r\n    const [degree, setDegree] = useState<Degree[]>([])\r\n    const [formValid, setFormValid] = useState(false)\r\n\r\n\r\n    const [errors, setErrors] = useState({\r\n        institute: '',\r\n        degreeError: '',\r\n        endingDateError: '',\r\n\r\n    })\r\n\r\n    const handleError = (field: string, error: boolean) => {\r\n        setErrors(prevErrors => ({ ...prevErrors, [field]: error }))\r\n    }\r\n\r\n    const handleEducationValidation = (value: string): boolean => {\r\n        return value.length >= 2\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('https://resume.redberryinternship.ge/api/degrees')\r\n            .then((response) => response.json())\r\n            .then((data) => setDegree(data))\r\n    }, [])\r\n\r\n\r\n    const handleAddForm = () => {\r\n        setFormCount(formCount + 1)\r\n        updateFormData({\r\n            educations: [\r\n                ...formData.educations,\r\n                {\r\n                    institute: '',\r\n                    degree_id: 0,\r\n                    due_date: '',\r\n                    description: '',\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    const handleFieldChange = (index: number, field: 'institute' | 'degree_id' | 'due_date' | 'endingDate' | 'description', value: string | number) => {\r\n        const updatedEducations = formData.educations.map((educations, i) => {\r\n            if (i === index) {\r\n                return { ...educations, [field]: value };\r\n            }\r\n            return educations;\r\n        });\r\n        updateFormData({ educations: updatedEducations });\r\n    };\r\n\r\n    const handleEndingDateChange = (index: number, newValue: string | null) => {\r\n        const updatedExperiences = formData.educations.map((educations, i) => {\r\n            if (i === index) {\r\n                return { ...educations, due_date: newValue || '' };\r\n            }\r\n            return educations;\r\n        });\r\n        updateFormData({ educations: updatedExperiences });\r\n    };\r\n\r\n    const submitData = useSubmit(formData);\r\n\r\n    useEffect(() => {\r\n        const educationsValid = formData.educations.every(educations => {\r\n            const { institute, degree_id, due_date, description } = educations;\r\n            return (\r\n                institute.length >= 2 &&\r\n                degree_id > 0 &&\r\n                Object.keys(due_date).length > 0 &&\r\n                description.length > 0\r\n            );\r\n        });\r\n\r\n        setFormValid(educationsValid);\r\n    }, [formData]);\r\n\r\n    const handleSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (formValid) {\r\n            submitData()\r\n            localStorage.removeItem('formData')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='row' >\r\n            <Box display='flex' paddingLeft='1.5em' gap=\"1em\" bgcolor='#F9F9F9' width=\"55%\" flexDirection='column' minHeight='100vh'>\r\n                <Box display='flex' gap=\"3em\" flexDirection='row' padding='2em'>\r\n                    <IconButton style={{ height: '40px', width: '40px', }} onClick={() => {\r\n                        localStorage.removeItem('formData')\r\n                        window.location.reload()\r\n                    }}>\r\n                        <img src={back} alt='circle' />\r\n                    </IconButton>\r\n                    <Box display='flex' flexDirection='column'>\r\n                        <Box display='flex' justifyContent='space-between' width='90%'>\r\n                            <Typography sx={{ fontWeight: '700', fontSize: '26px' }}>განათლება</Typography>\r\n                            <Typography sx={{ position: 'relative', top: '50%', fontSize: '18px' }}>3/3</Typography>\r\n                        </Box>\r\n                        <img src={line} alt=\"line\" style={{ width: '90%', paddingTop: '1em' }} />\r\n                    </Box>\r\n                </Box>\r\n                {Array.from({ length: formCount }, (_, index) => (\r\n                    <React.Fragment key={index} >\r\n                        <Box display='flex' width='89%' paddingTop='1em' paddingLeft='7.5em'>\r\n                            <WizardFormField onChange={(value) => {\r\n                                handleFieldChange(index, 'institute', value)\r\n                            }} value={formData.educations[index].institute} onError={(error) => handleError('institute', error)} placeholder='სასწავლებელი' label='სასწავლებელი' hint='მინიმუმ 2 სიმბოლო' validate={handleEducationValidation} />\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='row' gap='4em' paddingTop='1.5em' paddingLeft='7.5em'>\r\n                            <Box display='flex' flexDirection='column' width='40%' gap='1em'>\r\n                                <Typography sx={{ fontSize: '18px', fontWeight: '700' }}>ხარისხი</Typography>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel id='select-label'></InputLabel>\r\n                                    <Select\r\n                                        labelId=\"degree-select-label\"\r\n                                        sx={{ bgcolor: 'white' }}\r\n                                        id=\"degree-select\"\r\n                                        value={formData.educations[index].degree_id}\r\n                                        onChange={(e) => handleFieldChange(index, 'degree_id', e.target.value)}>\r\n                                        {degree.map((degree) => (\r\n                                            <MenuItem key={degree.id} value={degree.id}>\r\n                                                {degree.title}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                            <Box display='flex' flexDirection='column' width='40%' gap='1em'>\r\n                                <Typography sx={{ fontSize: '18px', fontWeight: '700' }}>დამთავრების რიცხვი</Typography>\r\n                                <DesktopDatePicker value={formData.educations[index].due_date} onChange={(newValue) => {\r\n                                    handleEndingDateChange(index, newValue)\r\n                                }}\r\n                                    renderInput={(params) => <TextField onFocus={e => e.target.blur()} sx={{\r\n                                        bgcolor: 'white', \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                            \"& > fieldset\": {\r\n                                                borderColor: formData.experiences[index].start_date.length < 0 ? '#000000' : '#98E373'\r\n                                            }\r\n                                        },\r\n                                    }} {...params} />}\r\n                                >\r\n                                </DesktopDatePicker>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='column' gap='0.4em' paddingTop='1.2em' paddingLeft='7.5em'>\r\n                            <Typography fontWeight='700' fontSize='20px'>აღწერა</Typography>\r\n                            <Box>\r\n                                <TextField value={formData.educations[index].description} onChange={(e) => handleFieldChange(index, 'description', e.target.value)} multiline placeholder=\"როლი თანამდებობაზე და ზოგადი აღწერა\" rows={4} sx={{ bgcolor: 'white', width: \"87%\",border: formData.educations[index].description.length === 0 ? '1px solid black' : '1px solid #98E373', \"& .MuiOutlinedInput-root.Mui-focused\": {\r\n                                    \"& > fieldset\": {\r\n                                        borderColor: \"black\",\r\n                                    }\r\n                                }, }} />\r\n                            </Box>\r\n                        </Box>\r\n                    </React.Fragment>\r\n                ))}\r\n                <Box display='flex' flexDirection='column' gap='3em' paddingTop='1.2em' paddingLeft='7.5em'>\r\n                    <img src={smallLine} alt=\"\" style={{ width: '87%' }} />\r\n                    <Button onClick={handleAddForm} sx={{ width: '289px', bgcolor: '#62A1EB', color: 'white', height: '50px', borderRadius: '5px', fontSize: '16px' }}>მეტი გამოცდილების დამატება</Button>\r\n                </Box>\r\n                <Box display='flex' paddingLeft='7.5em' width='88%' flexDirection='row' justifyContent='space-between' paddingTop='10em'>\r\n                    <Button onClick={() => {\r\n                        handleBackStep()\r\n                    }} sx={{ bgcolor: '#6B40E3', width: '113px', height: '48px', borderRadius: '4px', color: 'white', fontSize: '18px', fontWeight: '500' }}>უკან</Button>\r\n                    <Button onClick={handleSubmit} sx={{ bgcolor: '#6B40E3', width: '151px', height: '48px', borderRadius: '4px', color: 'white', fontSize: '18px', fontWeight: '500' }}>შემდეგი</Button>\r\n                </Box>\r\n            </Box>\r\n            <Resume formData={formData}></Resume>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default ThirdStep","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {   WizardFormData } from '../types'\r\nimport FirstStep from './FirstStep'\r\nimport SecondStep from './SecondStep'\r\nimport ThirdStep from './ThirdStep'\r\n\r\n\r\n\r\nconst WizardForm: React.FC = () => {\r\n    const [currentStep, setCurrentStep] = useState(1);\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState<WizardFormData>(() => {\r\n        const storedData = localStorage.getItem('formData');\r\n        return storedData ? JSON.parse(storedData) : {\r\n            name: '',\r\n            surname: '',\r\n            image: '',\r\n            about_me: '',\r\n            email: '',\r\n            phone_number: '',\r\n            experiences: [{\r\n                position: '',\r\n                employer: '',\r\n                start_date: '',\r\n                due_date: '',\r\n                description: '',\r\n            }],\r\n            educations:[{\r\n                institute: '',\r\n                degree_id: 0,\r\n                due_date: '',\r\n                description: '',\r\n            }]\r\n        };\r\n    });\r\n\r\n    const updateFormData = (updatedData: Partial<WizardFormData>) => {\r\n        setFormData({\r\n          ...formData,\r\n          ...updatedData,\r\n        });\r\n      };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('formData', JSON.stringify(formData));\r\n    }, [formData]);\r\n\r\n\r\n    const renderStep = (step: number) => {\r\n        switch (step) {\r\n            case 1:\r\n                return <FirstStep handleNextStep={handleNextStep} updateFormData={updateFormData} formData={formData} />\r\n            case 2:\r\n                return <SecondStep handleNextStep={handleNextStep} updateFormData={updateFormData} handleBackStep={handleBackStep} formData={formData} />\r\n            case 3:\r\n                return <ThirdStep handleBackStep={handleBackStep} updateFormData={updateFormData} handleNextStep={handleNextStep} formData={formData} />\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    const handleNextStep = () => {\r\n        if (currentStep === 3) {\r\n            navigate(\"/\");\r\n        } else {\r\n            setCurrentStep(currentStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBackStep = () => {\r\n        setCurrentStep(currentStep - 1)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {renderStep(currentStep)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WizardForm"],"names":["label","hint","placeholder","validate","onError","value","onChange","useState","setFieldValue","undefined","error","setError","Box","display","flexDirection","gap","width","Typography","fontSize","sx","color","fontWeight","TextField","bgcolor","border","borderRadius","borderColor","type","e","newValue","target","length","src","alt","style","height","position","left","top","right","formData","paddingLeft","paddingTop","whiteSpace","image","maxWidth","wordWrap","name","surname","alignItems","mail","email","phone","phone_number","about_me","smallLine","experiences","map","experience","index","employer","start_date","Date","toISOString","substring","due_date","description","educations","edu","idx","institute","rlogo","bottom","handleNextStep","updateFormData","formValid","setFormValid","nameError","surnameError","emailError","imageError","aboutMeError","numberError","setErrors","navigate","useNavigate","handleError","field","prevErrors","handleNameValidation","RegExp","test","handleEmailValidation","endsWith","handlePhoneValidation","number","formatedNumber","Number","replaceAll","startsWith","String","handleFieldChange","useEffect","nameValid","emailValid","phoneValid","surnameValid","imageValid","flex","minHeight","padding","IconButton","onClick","localStorage","removeItem","back","justifyContent","line","Button","variant","input","document","createElement","click","onchange","event","files","reader","FileReader","readAsDataURL","onload","result","multiline","rows","preventDefault","handleBackStep","formCount","setFormCount","positionError","employerError","startingDateError","endingDateError","descriptionError","handlePositionValidation","handleEmployerValidation","updatedExperiences","i","experiencesValid","every","Object","keys","window","location","reload","Array","from","_","DesktopDatePicker","handleStartingDateChange","renderInput","params","onFocus","blur","handleEndingDateChange","cursor","removeEmptyObjects","array","filter","obj","values","some","val","postData","axios","method","url","responseType","res","file","File","data","replace","modifiedData","forEach","split","education","headers","response","state","console","log","degree","setDegree","degreeError","handleEducationValidation","fetch","then","json","updatedEducations","submitData","useSubmit","educationsValid","degree_id","FormControl","fullWidth","InputLabel","id","Select","labelId","MenuItem","title","currentStep","setCurrentStep","storedData","getItem","JSON","parse","setFormData","updatedData","setItem","stringify","step","renderStep"],"sourceRoot":""}